{"ast":null,"code":"import _objectSpread from \"/Users/lukesHomeFolder/Desktop/e-commerce-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden,\n        cartItems: []\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        // cartItems: addItemToCart(state.cartItems, action.payload)\n        cartItems: []\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        // cartItems: removeItemFromCart(state.cartItems, action.payload)\n        cartItems: []\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        // cartItems: state.cartItems.filter(\n        //   cartItem => cartItem.id !== action.payload.id\n        // )\n        cartItems: []\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/lukesHomeFolder/Desktop/e-commerce-store/src/redux/cart/cart-reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","CLEAR_CART"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,+BACKH,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH,MAFjB;AAGEC,QAAAA,SAAS,EAAE;AAHb;;AAKF,SAAKL,eAAe,CAACW,QAArB;AACE,+BACKJ,KADL;AAEE;AACAF,QAAAA,SAAS,EAAE;AAHb;;AAKF,SAAKL,eAAe,CAACY,WAArB;AACE,+BACKL,KADL;AAEE;AACAF,QAAAA,SAAS,EAAE;AAHb;;AAKF,SAAKL,eAAe,CAACa,oBAArB;AACE,+BACKN,KADL;AAEE;AACA;AACA;AACAF,QAAAA,SAAS,EAAE;AALb;;AAOF,SAAKL,eAAe,CAACc,UAArB;AACE,+BACKP,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF;AACE,aAAOE,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n        cartItems: []\n      };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        // cartItems: addItemToCart(state.cartItems, action.payload)\n        cartItems: []\n      };\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        // cartItems: removeItemFromCart(state.cartItems, action.payload)\n        cartItems: []\n      };\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        // cartItems: state.cartItems.filter(\n        //   cartItem => cartItem.id !== action.payload.id\n        // )\n        cartItems: []\n      };\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}