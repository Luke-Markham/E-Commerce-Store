{"ast":null,"code":"var _jsxFileName = \"/Users/lukesHomeFolder/Desktop/e-commerce-store/src/components/sign-up/sign-up.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../../components/form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.styles.scss\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      }\n\n      try {\n        const _ref = await auth.createUserWithEmailAndPassword(email, password),\n              user = _ref.user;\n\n        createUserProfileDocument(user, {\n          displayName\n        });\n        this.setState({\n          displayName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const signUpStart = this.props.signUpStart;\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign up with your email\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      onClick: signUpStart,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: () => dispatch(signUpStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/lukesHomeFolder/Desktop/e-commerce-store/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","createUserProfileDocument","signUpStart","SignUp","Component","constructor","handleSubmit","e","preventDefault","state","displayName","email","password","confirmPassword","alert","createUserWithEmailAndPassword","user","setState","error","console","log","handleChange","target","name","value","render","props","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../../components/form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.styles.scss\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const { displayName, email, password, confirmPassword } = this.state;\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      createUserProfileDocument(user, { displayName });\n      this.setState({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { signUpStart } = this.props;\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\">I do not have an account</h2>\n        <span>Sign up with your email</span>\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            onChange={this.handleChange}\n            label=\"Display Name\"\n            required\n          />\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            label=\"Email\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            label=\"Password\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label=\"Confirm Password\"\n            required\n          />\n          <CustomButton onClick={signUpStart} type=\"submit\">\n            SIGN UP\n          </CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: () => dispatch(signUpStart())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}