{"ast":null,"code":"var _jsxFileName = \"/Users/lukesHomeFolder/Desktop/e-commerce-store/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./cart-dropdown.styles.scss\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCartItems } from \"../../redux/cart/cart-selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport CartDropdownContainer from \"../../components/cart-dropdown/cart-dropdown.container\";\n\nconst CartDropDown = ({\n  CartDropdownContainer,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, CartDropdownContainer.length ? CartDropdownContainer.map(item => React.createElement(CartItem, {\n  key: item.id,\n  item: item,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nexport default withRouter(connect(null)(CartDropDown));","map":{"version":3,"sources":["/Users/lukesHomeFolder/Desktop/e-commerce-store/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","CustomButton","CartItem","withRouter","createStructuredSelector","selectCartItems","toggleCartHidden","CartDropdownContainer","CartDropDown","history","dispatch","length","map","item","id","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,qBAAP,MAAkC,wDAAlC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAED,EAAAA,qBAAF;AAAyBE,EAAAA,OAAzB;AAAkCC,EAAAA;AAAlC,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,qBAAqB,CAACI,MAAtB,GACCJ,qBAAqB,CAACK,GAAtB,CAA0BC,IAAI,IAC5B,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,EAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,GAKC;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADF,EAWE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,CADF;;AAuBA,eAAeH,UAAU,CAACH,OAAO,CAAC,IAAD,CAAP,CAAcQ,YAAd,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./cart-dropdown.styles.scss\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCartItems } from \"../../redux/cart/cart-selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport CartDropdownContainer from \"../../components/cart-dropdown/cart-dropdown.container\";\n\nconst CartDropDown = ({ CartDropdownContainer, history, dispatch }) => (\n  <div className=\"cart-dropdown\">\n    <div className=\"cart-items\">\n      {CartDropdownContainer.length ? (\n        CartDropdownContainer.map(item => (\n          <CartItem key={item.id} item={item} />\n        ))\n      ) : (\n        <span className=\"empty-message\">Your cart is empty</span>\n      )}\n    </div>\n\n    <CustomButton\n      onClick={() => {\n        history.push(\"/checkout\");\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CustomButton>\n  </div>\n);\n\nexport default withRouter(connect(null)(CartDropDown));\n"]},"metadata":{},"sourceType":"module"}