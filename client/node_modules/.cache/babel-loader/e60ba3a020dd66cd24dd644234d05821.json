{"ast":null,"code":"import _objectSpread from \"/Users/lukesHomeFolder/Desktop/e-commerce-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyBViptRJJLuPMn0ovSTMu2bIy2L5_DtX40\",\n  authDomain: \"react-e-commerce-store.firebaseapp.com\",\n  databaseURL: \"https://react-e-commerce-store.firebaseio.com\",\n  projectId: \"react-e-commerce-store\",\n  storageBucket: \"\",\n  messagingSenderId: \"919030781919\",\n  appId: \"1:919030781919:web:7613f99cf46ba9af\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;else {\n    const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n    console.log(\"userRef: \", userRef.set());\n    const snapShot = await userRef.get();\n    console.log(\"snapShot: \", snapShot);\n\n    if (!snapShot.exists) {\n      const displayName = userAuth.displayName,\n            email = userAuth.email;\n      const createdAt = new Date();\n\n      try {\n        await userRef.set(_objectSpread({\n          displayName,\n          email,\n          createdAt\n        }, additionalData));\n      } catch (error) {\n        console.log(\"error creating user\", error.message);\n      }\n    }\n\n    return userRef;\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/lukesHomeFolder/Desktop/e-commerce-store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","console","log","set","snapShot","get","exists","displayName","email","createdAt","Date","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,wCAFC;AAGbC,EAAAA,WAAW,EAAE,+CAHA;AAIbC,EAAAA,SAAS,EAAE,wBAJE;AAKbC,EAAAA,aAAa,EAAE,EALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe,OAAf,KACK;AACH,UAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,OAAO,CAACM,GAAR,EAAzB;AACA,UAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACQ,GAAR,EAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,QAA1B;;AACA,QAAI,CAACA,QAAQ,CAACE,MAAd,EAAsB;AAAA,YACZC,WADY,GACWZ,QADX,CACZY,WADY;AAAA,YACCC,KADD,GACWb,QADX,CACCa,KADD;AAEpB,YAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,UAAI;AACF,cAAMb,OAAO,CAACM,GAAR;AACJI,UAAAA,WADI;AAEJC,UAAAA,KAFI;AAGJC,UAAAA;AAHI,WAIDb,cAJC,EAAN;AAMD,OAPD,CAOE,OAAOe,KAAP,EAAc;AACdV,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCS,KAAK,CAACC,OAAzC;AACD;AACF;;AACD,WAAOf,OAAP;AACD;AACF,CAvBM;AAyBPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AACP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBViptRJJLuPMn0ovSTMu2bIy2L5_DtX40\",\n  authDomain: \"react-e-commerce-store.firebaseapp.com\",\n  databaseURL: \"https://react-e-commerce-store.firebaseio.com\",\n  projectId: \"react-e-commerce-store\",\n  storageBucket: \"\",\n  messagingSenderId: \"919030781919\",\n  appId: \"1:919030781919:web:7613f99cf46ba9af\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  else {\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    console.log(\"userRef: \", userRef.set());\n    const snapShot = await userRef.get();\n    console.log(\"snapShot: \", snapShot);\n    if (!snapShot.exists) {\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log(\"error creating user\", error.message);\n      }\n    }\n    return userRef;\n  }\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}