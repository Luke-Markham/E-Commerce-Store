{"ast":null,"code":"var _jsxFileName = \"/Users/lukesHomeFolder/Desktop/e-commerce-store/src/components/sign-in/sign-in.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport \"./sign-in.styles.scss\";\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.HandleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    this.HandleChange = e => {\n      const _e$target = e.target,\n            value = _e$target.value,\n            name = _e$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.HandleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.HandleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.HandleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/lukesHomeFolder/Desktop/e-commerce-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","SignIn","Component","constructor","HandleSubmit","e","preventDefault","state","email","password","auth","signInWithEmailAndPassword","setState","error","alert","HandleChange","target","value","name","render","props","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport \"./sign-in.styles.scss\";\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  HandleSubmit = async e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({ email: \"\", password: \"\" });\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  HandleChange = e => {\n    const { value, name } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { googleSignInStart } = this.props;\n    return (\n      <div className=\"sign-in\">\n        <h2 className=\"title\">I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.HandleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            handleChange={this.HandleChange}\n            label=\"email\"\n            required\n          />\n\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.HandleChange}\n            label=\"password\"\n            required\n          />\n          <div className=\"buttons\">\n            <CustomButton type=\"submit\">Sign In</CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={googleSignInStart}\n              isGoogleSignIn={true}\n            >\n              Sign In With Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}