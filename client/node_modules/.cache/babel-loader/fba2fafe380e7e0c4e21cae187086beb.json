{"ast":null,"code":"import _objectSpread from \"/Users/lukesHomeFolder/Desktop/e-commerce-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyBViptRJJLuPMn0ovSTMu2bIy2L5_DtX40\",\n  authDomain: \"react-e-commerce-store.firebaseapp.com\",\n  databaseURL: \"https://react-e-commerce-store.firebaseio.com\",\n  projectId: \"react-e-commerce-store\",\n  storageBucket: \"\",\n  messagingSenderId: \"919030781919\",\n  appId: \"1:919030781919:web:7613f99cf46ba9af\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;else {\n    const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n      const displayName = userAuth.displayName,\n            email = userAuth.email;\n      const createdAt = new Date();\n\n      try {\n        await userRef.set(_objectSpread({\n          displayName,\n          email,\n          createdAt\n        }, additionalData));\n      } catch (error) {\n        console.log(\"error creating user\", error.message);\n      }\n    }\n\n    return userRef;\n  }\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      title,\n      items,\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id\n    };\n  });\n  transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()];\n  }, {});\n}; //THIS FUNCTION IS TO AVOID MANUAL ADDING OF COLLECTIONS AND ITEMS TO FIREBASE(firestore)\n// export const addCollectionAndDocuments = async (\n//   collectionKey,\n//   objectsToAdd\n// ) => {\n//   const collectionRef = firestore.collection(collectionKey);\n//   console.log(collectionRef);\n//   const batch = firestore.batch();\n//   objectsToAdd.forEach(obj => {\n//     const newDocRef = collectionRef.doc();\n//     batch.set(newDocRef, obj);\n//   });\n//   return await batch.commit();\n// };\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/lukesHomeFolder/Desktop/e-commerce-store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,wCAFC;AAGbC,EAAAA,WAAW,EAAE,+CAHA;AAIbC,EAAAA,SAAS,EAAE,wBAJE;AAKbC,EAAAA,aAAa,EAAE,EALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe,OAAf,KACK;AACH,UAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,UAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,QAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,YACZC,WADY,GACWT,QADX,CACZS,WADY;AAAA,YACCC,KADD,GACWV,QADX,CACCU,KADD;AAEpB,YAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,UAAI;AACF,cAAMV,OAAO,CAACW,GAAR;AACJJ,UAAAA,WADI;AAEJC,UAAAA,KAFI;AAGJC,UAAAA;AAHI,WAIDV,cAJC,EAAN;AAMD,OAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AACD,WAAOf,OAAP;AACD;AACF,CArBM;AAuBP,OAAO,MAAMgB,+BAA+B,GAAGC,WAAW,IAAI;AAC5D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqBlB,GAAG,IAAI;AAAA,sBAC/BA,GAAG,CAACmB,IAAJ,EAD+B;AAAA,UAChDC,KADgD,aAChDA,KADgD;AAAA,UACzCC,KADyC,aACzCA,KADyC;;AAExD,WAAO;AACLD,MAAAA,KADK;AAELC,MAAAA,KAFK;AAGLC,MAAAA,SAAS,EAAEC,SAAS,CAACH,KAAK,CAACI,WAAN,EAAD,CAHf;AAILC,MAAAA,EAAE,EAAEzB,GAAG,CAACyB;AAJH,KAAP;AAMD,GAR6B,CAA9B;AASAT,EAAAA,qBAAqB,CAACU,MAAtB,CAA6B,CAACC,WAAD,EAAcC,UAAd,KAA6B;AACxDD,IAAAA,WAAW,CAACC,UAAU,CAACR,KAAX,CAAiBI,WAAjB,EAAD,CAAX;AACD,GAFD,EAEG,EAFH;AAGD,CAbM,C,CAeP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAtC,QAAQ,CAAC2C,aAAT,CAAuB1C,MAAvB;AACA,OAAO,MAAM2C,IAAI,GAAG5C,QAAQ,CAAC4C,IAAT,EAAb;AACP,OAAO,MAAM/B,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AACP,MAAMgC,QAAQ,GAAG,IAAI7C,QAAQ,CAAC4C,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7C,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBViptRJJLuPMn0ovSTMu2bIy2L5_DtX40\",\n  authDomain: \"react-e-commerce-store.firebaseapp.com\",\n  databaseURL: \"https://react-e-commerce-store.firebaseio.com\",\n  projectId: \"react-e-commerce-store\",\n  storageBucket: \"\",\n  messagingSenderId: \"919030781919\",\n  appId: \"1:919030781919:web:7613f99cf46ba9af\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  else {\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n    if (!snapShot.exists) {\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log(\"error creating user\", error.message);\n      }\n    }\n    return userRef;\n  }\n};\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n    return {\n      title,\n      items,\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id\n    };\n  });\n  transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()];\n  }, {});\n};\n\n//THIS FUNCTION IS TO AVOID MANUAL ADDING OF COLLECTIONS AND ITEMS TO FIREBASE(firestore)\n\n// export const addCollectionAndDocuments = async (\n//   collectionKey,\n//   objectsToAdd\n// ) => {\n//   const collectionRef = firestore.collection(collectionKey);\n//   console.log(collectionRef);\n//   const batch = firestore.batch();\n//   objectsToAdd.forEach(obj => {\n//     const newDocRef = collectionRef.doc();\n//     batch.set(newDocRef, obj);\n//   });\n//   return await batch.commit();\n// };\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}